allprojects {
    group 'ch.sourcepond.osgi.cmpn'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'biz.aQute.bnd.builder'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'net.researchgate.release'
    apply plugin: 'io.codearte.nexus-staging'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integration-test/java')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }

    dependencyManagement {
        dependencies {
            // Compile dependencies
            dependency 'org.slf4j:slf4j-api:1.7.25'
            dependency 'org.osgi:org.osgi.core:6.0.0'
            dependency 'org.osgi:osgi.cmpn:6.0.0'

            // Test dependencies
            dependency 'junit:junit:4.12'
            dependency 'org.mockito:mockito-core:2.11.0'
            dependency 'ch.qos.logback:logback-core:1.2.3'
            dependency 'ch.qos.logback:logback-classic:1.2.3'
            dependency 'commons-io:commons-io:2.6'

            // Integration-test dependencies
            dependency 'org.apache.felix:org.apache.felix.metatype:1.1.6'
            dependency 'org.apache.felix:org.apache.felix.configadmin:1.8.16'
            dependency 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.javax-inject:1_2'
            dependency 'org.ops4j.pax.exam:pax-exam-container-native:4.11.0'
            dependency 'org.ops4j.pax.exam:pax-exam-junit4:4.11.0'
            dependency 'org.ops4j.pax.exam:pax-exam-link-mvn:4.11.0'
            dependency 'org.ops4j.pax.url:pax-url-aether:2.5.3'
            dependency 'org.apache.felix:org.apache.felix.framework:5.6.10'
        }
    }

    dependencies {
        testCompile 'junit:junit'
        testCompile 'org.mockito:mockito-core'
        testCompile 'ch.qos.logback:logback-core'
        testCompile 'ch.qos.logback:logback-classic'
    }

    // OSSRH

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Metatype Builder'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'Simple library for building OSGi metatype components'
                    url 'scm:git:https://github.com/SourcePond/metatype-builder.git'

                    scm {
                        connection 'scm:git:https://github.com/SourcePond/metatype-builder.git'
                        developerConnection 'scm:git:ssh:git@github.com:SourcePond/metatype-builder.git'
                        url 'https://github.com/SourcePond/metatype-builder.git'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'roland'
                            name 'Roland Hauser'
                            email 'sourcepond@gmail.com'
                        }
                    }
                }
            }
        }
    }

    afterReleaseBuild.dependsOn uploadArchives
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.5.0'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE'
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}